{"version":3,"sources":["chartjs-axis-borders.min.js"],"names":["global","factory","define","amd","exports","require","mod","chart","chartjsAxisBorders","this","_chart","Object","defineProperty","value","obj","_chart2","__esModule","default","Chart","window","ChartJSHelpers","helpers","chartjsBorders","id","defaultOptions","lineWidth","strokeStyle","afterDraw","chartInstance","options","axisBorders","enabled","context","ctx","save","getValueOrDefault","each","scales","scale","me","x1","left","x2","right","y1","top","y2","bottom","isHorizontal","aliasPixel","position","beginPath","moveTo","lineTo","stroke","restore","pluginService","register"],"mappings":"CAAA,SAAWA,EAAQC,GACjB,GAAsB,mBAAXC,QAAyBA,OAAOC,IACzCD,QAAQ,UAAW,YAAaD,QAC3B,GAAuB,oBAAZG,QAChBH,EAAQG,QAASC,QAAQ,iBACpB,CACL,IAAIC,KAGJL,EAAQK,EAAaN,EAAOO,OAC5BP,EAAOQ,mBAAqBF,GAVhC,CAYGG,KAAM,SAAUL,EAASM,GAC1B,aAEAC,OAAOC,eAAeR,EAAS,cAC7BS,OAAO,IAGT,IAEgCC,EAF5BC,GAE4BD,EAFKJ,IAGrBI,EAAIE,WAAaF,GAC7BG,QAASH,GAIb,IAAII,EAAmC,mBAApBH,EAAQE,QAAyBF,EAAQE,QAAUE,OAAOD,MAGzEE,EAAiBF,EAAMG,QAQvBC,GACFC,GAAI,cACJC,gBAPAC,UAAW,EACXC,YAAa,WAObC,UAAW,SAAmBC,GAC5B,IAAIC,EAAUD,EAAcC,QAAQC,YACpC,GAAKD,GAAYA,EAAQE,QAAzB,CAIA,IAAIC,EAAUJ,EAAcK,IAC5BD,EAAQE,OAERF,EAAQP,UAAYL,EAAee,kBAAkBN,EAAQJ,UAAWhB,KAAKe,eAAeC,WAC5FO,EAAQN,YAAcN,EAAee,kBAAkBN,EAAQH,YAAajB,KAAKe,eAAeE,aAChGN,EAAegB,KAAKR,EAAcS,OAAQ,SAAUC,GAClD,IAAIC,EAAKD,EACLE,EAAKD,EAAGE,KACRC,EAAKH,EAAGI,MACRC,EAAKL,EAAGM,IACRC,EAAKP,EAAGQ,OACRC,EAAeT,EAAGS,eAClBnB,EAAUU,EAAGV,QAEboB,EAAa7B,EAAe6B,WAAWjB,EAAQP,WAC/CuB,GACFJ,EAAKE,EAA0B,QAArBjB,EAAQqB,SAAqBX,EAAGQ,OAASR,EAAGM,IACtDD,GAAMK,EACNH,GAAMG,IAENT,EAAKE,EAA0B,SAArBb,EAAQqB,SAAsBX,EAAGI,MAAQJ,EAAGE,KACtDD,GAAMS,EACNP,GAAMO,GAGRjB,EAAQmB,YACRnB,EAAQoB,OAAOZ,EAAII,GACnBZ,EAAQqB,OAAOX,EAAII,GACnBd,EAAQsB,WAGVtB,EAAQuB,aAKZrC,EAAMsC,cAAcC,SAASnC,GAG7BlB,EAAQa,QAAUK","file":"chartjs-axis-borders.min.js","sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', 'chart.js'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('chart.js'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.chart);\n    global.chartjsAxisBorders = mod.exports;\n  }\n})(this, function (exports, _chart) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _chart2 = _interopRequireDefault(_chart);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var Chart = typeof _chart2.default === 'function' ? _chart2.default : window.Chart; // Import chart.js\n\n\n  var ChartJSHelpers = Chart.helpers;\n\n  var defaultOptions = {\n    lineWidth: 2,\n    strokeStyle: '#979797'\n  };\n\n  // Create the plugin\n  var chartjsBorders = {\n    id: 'axisborders',\n    defaultOptions: defaultOptions,\n    afterDraw: function afterDraw(chartInstance) {\n      var options = chartInstance.options.axisBorders;\n      if (!options || !options.enabled) {\n        return;\n      }\n\n      var context = chartInstance.ctx;\n      context.save();\n\n      context.lineWidth = ChartJSHelpers.getValueOrDefault(options.lineWidth, this.defaultOptions.lineWidth);\n      context.strokeStyle = ChartJSHelpers.getValueOrDefault(options.strokeStyle, this.defaultOptions.strokeStyle);\n      ChartJSHelpers.each(chartInstance.scales, function (scale) {\n        var me = scale;\n        var x1 = me.left;\n        var x2 = me.right;\n        var y1 = me.top;\n        var y2 = me.bottom;\n        var isHorizontal = me.isHorizontal();\n        var options = me.options;\n\n        var aliasPixel = ChartJSHelpers.aliasPixel(context.lineWidth);\n        if (isHorizontal) {\n          y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n          y1 += aliasPixel;\n          y2 += aliasPixel;\n        } else {\n          x1 = x2 = options.position === 'left' ? me.right : me.left;\n          x1 += aliasPixel;\n          x2 += aliasPixel;\n        }\n\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      });\n\n      context.restore();\n    }\n  };\n\n  // Register the plugin\n  Chart.pluginService.register(chartjsBorders);\n\n  // Export the plugin\n  exports.default = chartjsBorders;\n});"]}